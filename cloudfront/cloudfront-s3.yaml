AWSTemplateFormatVersion: '2010-09-09'
Description: 'CloudFront distribution backed by an S3 bucket'
Parameters:
  DomainName:
    Description: FQDN for CloudFront distribution
    Type: String
  ValidationDomainName:
    Description: Domain name where certificate validation emails should be sent
    Type: String
  OperatorEmail:
    Description: Email address to notify on CloudWatch alarms
    Type: String
    AllowedPattern: "([a-zA-Z0-9_\\-\\.]+)@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.)|(([a-zA-Z0-9\\-]+\\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\\]?)"
    ConstraintDescription: 'Must be a valid email address'
  HostedZoneId:
    Description: Hosted Zone ID for apex domain
    Type: AWS::Route53::HostedZone::Id
  LogRetentionInDays:
    Description: Days to retain CloudFront access logs in S3
    Type: Number
    Default: 30
    AllowedValues:
    - 7
    - 14
    - 30
    - 60
    - 90
    - 120
    - 150
    - 180
    - 365
    - 400
    - 545
    - 731
    - 1827
    - 3653

Resources:

  ######################################
  # S3 backend
  #
  # Contains actual front-end resources,
  # which CloudFront serves.
  ######################################

  AppBucket:
    Type: AWS::S3::Bucket
    Properties:
      AccessControl: Private
      BucketName: !Sub "${AWS::StackName}-resources"
      Tags:
        - Key: Environment
          Value: !Ref EnvironmentName
        - Key: Usage
          Value: application

  AppBucketPolicy:
    Type: AWS::S3::BucketPolicy
    DependsOn: CloudFrontIdentity
    Properties:
      Bucket: !Ref AppBucket
      PolicyDocument:
        Version: '2012-10-17'
        Id: PolicyForCloudFrontPrivateContent
        Statement:
          - Sid: AllowCloudFrontGet
            Effect: Allow
            Principal:
              CanonicalUser: !GetAtt CloudFrontIdentity.S3CanonicalUserId
            Action: 's3:GetObject'
            Resource: !Join ['', ['arn:aws:s3:::', !Ref 'AppBucket', '/*']]

  LogBucket:
    Type: AWS::S3::Bucket
    Properties:
      AccessControl: LogDeliveryWrite
      # Ref: https://aws.amazon.com/blogs/security/how-to-prevent-uploads-of-unencrypted-objects-to-amazon-s3/
      # Each object is is encrypted separately using the AES256 block cipher.
      # Encryption key is maintained by AWS.
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      BucketName: !Sub "${AWS::StackName}-logs"
      LifecycleConfiguration:
        Rules:
          - ExpirationInDays: !Ref LogRetentionInDays
            Id: 'delete-old-logs'
            Prefix: 'cloudfront/'
            Status: Enabled
      Tags:
        - Key: Usage
          Value: application

  #########################################
  # CloudFront
  #
  # Load static content from the S3 bucket
  # and caches it for further distribution.
  #########################################

  CloudFrontIdentity:
    Type: AWS::CloudFront::CloudFrontOriginAccessIdentity
    Properties:
      CloudFrontOriginAccessIdentityConfig:
        Comment: 'Front-end app CloudFront origin access identity'

  CloudFrontDistribution:
    Type: AWS::CloudFront::Distribution
    DependsOn:
      - AppBucket
      - CloudFrontCert
    Properties:
      DistributionConfig:
        Aliases:
          - !Ref DomainName
          - !Sub "www.${DomainName}"
        Comment: 'Cloudfront Distribution pointing to S3 bucket'
        CustomErrorResponses:
          - ErrorCachingMinTTL: 0
            ErrorCode: 404
            ResponseCode: 200
            ResponsePagePath: '/index.html'
          - ErrorCachingMinTTL: 0
            ErrorCode: 403
            ResponseCode: 200
            ResponsePagePath: '/index.html'
        DefaultCacheBehavior:
          AllowedMethods:
            - GET
            - HEAD
          Compress: true
          TargetOriginId: S3Origin
          ForwardedValues:
            QueryString: true
            Cookies:
              Forward: none
          ViewerProtocolPolicy: redirect-to-https
        DefaultRootObject: 'index.html'
        Enabled: true
        HttpVersion: http2
        Logging:
          Bucket: !GetAtt LogBucket.DomainName
          IncludeCookies: false
          Prefix: 'cloudfront/'
        Origins:
          - DomainName: !GetAtt AppBucket.DomainName
            Id: S3Origin
            S3OriginConfig:
              OriginAccessIdentity: !Sub "origin-access-identity/cloudfront/${CloudFrontIdentity}"
        PriceClass: PriceClass_100 # USA & Europe only
        ViewerCertificate:
          AcmCertificateArn: !Ref CloudFrontCert
          MinimumProtocolVersion: TLSv1.2_2018
          SslSupportMethod: sni-only
        WebACLId: !Ref CloudFrontACL
      Tags:
        - Key: Usage
          Value: application

  ############################################################################
  # Security
  #
  # See: https://aws.amazon.com/answers/security/aws-waf-security-automations/
  ############################################################################

  ##################
  # DNS & networking
  ##################

  # TODO: Automatically verify using DNS validation or other methods
  CloudFrontCert:
    Type: AWS::CertificateManager::Certificate
    Properties:
      DomainName: !Ref DomainName
      DomainValidationOptions:
        - DomainName: !Ref DomainName
          ValidationDomain: !Ref ValidationDomainName
      SubjectAlternativeNames:
        - !Join ['.', ['www', !Ref DomainName]]
      Tags:
        - Key: Usage
          Value: application

  AppDNS:
    Type: AWS::Route53::RecordSetGroup
    Properties:
      HostedZoneId: !Ref HostedZoneId
      RecordSets:
        - Name: !Ref DomainName
          Type: A
          AliasTarget:
            # CloudFront hosted zone in eu-central-1
            HostedZoneId: Z2FDTNDATAQYW2
            DNSName: !GetAtt [CloudFrontDistribution, DomainName]
        - Name: !Join ['.', ['www', !Ref DomainName]]
          Type: A
          AliasTarget:
            # CloudFront hosted zone in eu-central-1
            HostedZoneId: Z2FDTNDATAQYW2
            DNSName: !GetAtt [CloudFrontDistribution, DomainName]

  #################################
  # Monitoring, metrics and logging
  #################################

  NotificationTopic:
    Type: AWS::SNS::Topic
    Properties:
      DisplayName: !Sub "CloudWatch alarms for ${AWS::StackName}"
      Subscription:
        - Endpoint: !Ref OperatorEmail
          Protocol: 'email'
      TopicName: !Sub "alarms-${AWS::StackName}"

  RequestSpikeAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmActions:
        - Ref: NotificationTopic
      AlarmDescription: |
        Amount of requests spiked to over 1000
        requests over three consecutive 1 minute periods
      ComparisonOperator: GreaterThanThreshold 
      Dimensions:
        - Name: DistributionId
          Value: !Ref CloudFrontDistribution
        - Name: Region
          Value: Global
      EvaluationPeriods: 3
      MetricName: Requests
      Namespace: AWS/CloudFront
      Period: 60
      Statistic: Sum
      Threshold: 1000
      TreatMissingData: notBreaching

  ErrorRateAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmActions:
        - Ref: NotificationTopic
      AlarmDescription: |
        Error rate went over 25 % over three consecutive
        1 minute periods
      ComparisonOperator: GreaterThanThreshold 
      Dimensions:
        - Name: DistributionId
          Value: !Ref CloudFrontDistribution
        - Name: Region
          Value: Global
      EvaluationPeriods: 3
      MetricName: TotalErrorRate
      Namespace: AWS/CloudFront
      Period: 60
      Statistic: Average
      Threshold: 25
      TreatMissingData: notBreaching
      Unit: Percent

Outputs:
  URL:
    Value: !Join ['', ['https://', !Ref DomainName]]
  S3Bucket:
    Value: !Ref AppBucket
    Export:
      Name: !Sub "${AWS::StackName}-S3Bucket"
  LogBucket:
    Value: !Ref LogBucket
    Export:
      Name: !Sub "${AWS::StackName}-LogBucket"
  DistributionId:
    Value: !Ref CloudFrontDistribution
    Export:
      Name: !Sub "${AWS::StackName}-DistributionId"